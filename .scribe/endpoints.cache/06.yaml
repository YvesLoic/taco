## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Route pour les avis'
description: |-

  Collections des opérations sur les avis émis par les différents clients.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/notice/list
    metadata:
      groupName: 'Route pour les avis'
      groupDescription: |-

        Collections des opérations sur les avis émis par les différents clients.
      subgroup: ''
      subgroupDescription: ''
      title: ListAll.
      description: |-
        Récupère la liste des avis de l'utilisateur qui émet la requette
        selon une page et un nombre qu'il peut définir.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer ${token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'numéro correspondant à la page à lire.'
        required: false
        example: 1
        type: integer
        custom: []
      quantity:
        name: quantity
        description: 'nombre d''éléments à lire par page.'
        required: false
        example: 10
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
      quantity: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"error":"Wrong number of segments"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/notice/create
    metadata:
      groupName: 'Route pour les avis'
      groupDescription: |-

        Collections des opérations sur les avis émis par les différents clients.
      subgroup: ''
      subgroupDescription: ''
      title: Create.
      description: 'Permet à un utilisateur d''enregistrer un nouvel avis.'''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer ${token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'contenu de l''avis.'
        required: false
        example: explicabo
        type: string
        custom: []
      note:
        name: note
        description: 'note de l''avis.'
        required: false
        example: 4
        type: integer
        custom: []
      sender_id:
        name: sender_id
        description: 'utilisateur qui émet l''avis.'
        required: false
        example: 1
        type: integer
        custom: []
      receiver_id:
        name: receiver_id
        description: 'utilisateur concerné par l''avis.'
        required: false
        example: 2
        type: integer
        custom: []
    cleanBodyParameters:
      content: explicabo
      note: 4
      sender_id: 1
      receiver_id: 2
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
